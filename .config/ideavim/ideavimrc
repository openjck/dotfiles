" NOTE: If this is the Windows copy of this file, remember to update
" $XDG_CONFIG_HOME/ideavim/ideavimrc in WSL whenever it changes.
"
" When using IdeaVim on Windows, IdeaVim requires that this file be named
" .ideavimrc and that it live in the Windows home directory. For the purposes of
" this documentation, we'll call that the Windows file.
"
" I'd rather the file live at $XDG_CONFIG_HOME/ideavim/ideavimrc in WSL so that
" it can be managed by vcsh. For the purposes of this documentation, we'll
" call that the WSL file.
"
" On Windows 10, I was able to source the WSL file from the Windows file using
" the `source` feature of Vimscript. On Windows 11, I can't seem to make that
" work. I also haven't had success creating a symbolic link, hard link, or
" Windows shortcut from the Windows file to the WSL file, even when specifying
" the target as a "Windows-style" path like _W:/path/to/file/in/wsl.
"
" When modifying IdeaVim settings, the Windows file should be edited, then the
" WSL file should be updated to exactly match the Windows file, so that those
" changes can be tracked in vcsh. It's an imperfect solution, but it works.

" Set some options that are recommended by the IdeaVim team.
"
" https://github.com/JetBrains/ideavim/blob/68e285b514103da6923561e3ec54d07139f23841/README.md#ideavim-tips-and-tricks
set ideajoin
set ideamarks
set clipboard+=ideaput

" Enable emulation for some plugins that I use in Neovim.
Plug 'kana/vim-textobj-entire'
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/ReplaceWithRegister'

" Add support for `gqq` and `<visual selection>gq`.
"
" This does not add support for `gq`-based motions like `gqip`. This also
" assumes that the "Wrap to Column" plugin is installed.
"
" https://youtrack.jetbrains.com/issue/VIM-186/gq-does-not-reformat-word-wrap-comments#focus=Comments-27-4355985.0-0
nmap gqq <Action>(com.andrewbrookins.idea.wrap.WrapAction)
vmap gq <Action>(com.andrewbrookins.idea.wrap.WrapAction)

" Disable the F1 key. See the corresponding Neovim configuration in _keys.vim_
" for more information.
nnoremap <F1> <nop>
inoremap <F1> <nop>

" Disable ex mode. See the corresponding Neovim configuration in _keys.vim_ for
" more information.
nnoremap Q <Nop>
nnoremap gQ <Nop>

" Show the active mode.
"
" This isn't enabled in IdeaVim by default, but there is a ticket about
" something similar:
"
" https://youtrack.jetbrains.com/issue/VIM-1377/Normal-mode-needs-to-be-more-obvious
set showmode

" These are enabled in Neovim by default, but disabled in Vim and IdeaVim by
" default.
set hlsearch
set incsearch

" Use C-[direction] to move between splits.
"
" In my Neovim configuration, this is achieved through the use of the
" vim-tmux-navigator plugin.
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Support the use of gx for opening links in normal mode.
"
" https://youtrack.jetbrains.com/issue/VIM-1341/gx-should-open-selection-in-browser#focus=Comments-27-6785979.0-0
nmap gx gd

" Disable the bell sound.
"
" https://superuser.com/a/677312/1174309
set visualbell

" Set up leader commands that are also supported in my Neovim configuration.
"
" For these leader commands, use features that are built into JetBrains IDEs
" rather than features that are provided by Neovim or Neovim plugins. IdeaVim
" doesn't support any Neovim plugins except for those that are emulated and
" manually enabled.
"
" See leader.vim for the corresponding leader commands in Neovim.
nnoremap <Space> <Nop>
map <Space> <Leader>
nmap <Leader>gd <Action>(GotoDeclaration)
nmap <Leader>gin <Action>(GotoNextError)
nmap <Leader>gip <Action>(GotoPreviousError)
nmap <Leader>gt <Action>(GotoTypeDeclaration)
nnoremap <Leader>hh :<C-U>nohlsearch<CR>
nmap <Leader>mf <Action>(ReformatWithPrettierAction)
nmap <Leader>mr <Action>(RenameElement)
nmap <Leader>os <Action>(NewScratchFile)
nmap <Leader>sd <Action>(QuickJavaDoc)
nmap <Leader>sm <Action>(ShowErrorDescription)

 " Show usages (mini)
nmap <Leader>sum <Action>(ShowUsages)

 " Show usages (full)
nmap <Leader>suf <Action>(FindUsages)

" Support the <Leader>nr command.
"
" For reasons I don't understand, this will only work if the filename is
" specified as ~/.ideavimrc, even if the file lives in Windows. This will not
" work if the filename is specified with a Windows-style path or if the filename
" is specified using the $HOME environment variable.
command! Reconfigure source ~/.ideavimrc
nnoremap <Leader>nr :<C-U>Reconfigure<CR>

" Set up leader commands that are not yet supported in my Neovim configuration.
"
" These are additional leader commands that use features that built into
" JetBrains IDEs, but that are not yet supported in my Neovim configuration.
"
" There should be one corresponding leader command in leader.vim for each leader
" command added here, even if it doesn't do anything useful. In other words, I
" should keep leader.vim as the single source of truth. That will help me keep
" things in order, so that I don't accidentally create a leader command in my
" Neovim configuration that conflicts with the IdeaVim configuration.
nmap <Leader>mi <Action>(Inline)
nmap <Leader>ms <Action>(ShowIntentionActions)
nmap <Leader>t <Action>(RunClass)