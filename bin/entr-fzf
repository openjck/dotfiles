#!/usr/bin/env bash

# Use "strict mode."
#
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail

COMMAND_NAME=$(basename "$0")

eval "$(docopts --help=- -A ARGS : "$@" <<EOF
Use fzf to choose one or more files to watch and run a command when any of them
changes. Use the tab key to select multiple files.

Usage:
  $COMMAND_NAME COMMAND...
  $COMMAND_NAME -h | --help

Examples:
  $COMMAND_NAME npm run build
  $COMMAND_NAME yarn build

Options:
  -h, --help
      Show this documentation
EOF
)"

if ! command -v entr > /dev/null; then
  >&2 echo 'Error: entr is not installed.'
  exit 1
fi

if ! command -v fzf > /dev/null; then
  >&2 echo 'Error: fzf is not installed.'
  exit 1
fi

# Process variadic arguments.
#
# See the last example of the following page:
# https://github.com/docopt/docopts#examples
LAST_VARIADIC_INDEX=$((${ARGS[COMMAND,#]} - 1))
for I in $(seq 0 $LAST_VARIADIC_INDEX); do
  ENTR_ARGS+=("${ARGS[COMMAND,$I]}")
done

# Disable SC2086. We don't need to worry about word splitting here because entr
# will work as expected if each word of COMMAND is a separate argument to entr.
#
# shellcheck disable=SC2068
fzf --multi | entr ${ENTR_ARGS[@]}
