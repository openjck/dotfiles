#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2023 John Karahalis
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Use "strict mode."
#
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail

COMMAND_NAME=$(basename "$0")

eval "$(docopts --help=- -A ARGS : "$@" <<EOF
Overwrite a CSV with its own data, but as written by PHP's fputcsv function.
This can be helpful when compatibility with fputcsv's formatting is required.
For example, fputcsv surrounds all values containing spaces with double quotes,
whereas some other tools, like PhpStorm's CSV editor, do not appear to be able
to do this.

NOTE: The provided file will be overwritten.

Usage:
  $COMMAND_NAME FILE
  $COMMAND_NAME -h | --help

Examples:
  $COMMAND_NAME example.csv

Options:
  -h, --help
      Show this documentation
EOF
)"

php <<EOF
<?php

function exitWithError(string \$errorMessage): void {
  \$filePointer = fopen('php://stderr', 'w');
  fwrite(\$filePointer, \$errorMessage . PHP_EOL);
  fcclose(\$filePointer);
  exit(1);
}

\$inputFilename = '${ARGS[FILE]}';

if (!file_exists(\$inputFilename)) {
  exitWithError("Error: File \"\$inputFilename\" does not exist.");
}

\$inputHandle = fopen(\$inputFilename, 'r');
\$outputHandle = tmpfile();

if (\$inputHandle === FALSE) {
  exitWithError("Error: Cannot open file \"\$inputFilename\".");
}

if (\$outputHandle === FALSE) {
  exitWithError('Error: Cannot open tmpfile.');
}

while ((\$data = fgetcsv(\$inputHandle)) !== FALSE) {
  fputcsv(\$outputHandle, \$data);
}

\$outputFilename = stream_get_meta_data(\$outputHandle)['uri'];

rename(\$outputFilename, \$inputFilename);

fclose(\$inputHandle);
fclose(\$outputHandle);
EOF
