#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2023, 2024 John Karahalis
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Use "strict mode."
#
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail

COMMAND_NAME=$(basename "$0")

eval "$(docopts --help=- -A ARGS : "$@" <<EOF
Recursively replace a string or pattern with a given string, modifying all files
in the current directory and all subdirectories.

This script uses sd to search and replace within files, so please consult the sd
documentation for more informaiton about the regular expression style supported
in the "SEARCH" and "REPLACE" arguments:

https://github.com/chmln/sd

Usage:
  $COMMAND_NAME [--backups] SEARCH REPLACE
  $COMMAND_NAME -h | --help

Examples:
  $COMMAND_NAME 'John.*?Karahalis' JK

Options:
  -b, --backups
      Back up all files before performing search and replace. Backups will end
      with the ".$COMMAND_NAME.backup" file extension.
  -h, --help
      Show this documentation
EOF
)"

DEPENDENCIES=(
  sd
)

for DEPENDENCY in "${DEPENDENCIES[@]}"; do
  if ! command -v "$DEPENDENCY" > /dev/null; then
    >&2 echo "Error: \"$DEPENDENCY\" is not installed."
    exit 1
  fi
done

# Some distros, including Ubuntu, use the name "fdfind" for the command because
# something else already uses the name "fd". In the case of Ubuntu, the package
# that uses the name "fd" is "fdclone".
#
# Here, fdfind is tested first, even though it's less common, because it's more
# specific and doesn't have any common conflicts that I know of.
if command -v fdfind > /dev/null; then
  FD_COMMAND=fdfind
elif command -v fd > /dev/null; then
  FD_COMMAND=fd
else
  >&2 echo "Error: fd (a.k.a. fdfind) is not installed."
  exit 1
fi

# Use fd and sd together to conveniently search and replace, as suggested by the
# sd documentation.
#
# https://github.com/chmln/sd#quick-guide
if ${ARGS[--backups]}; then
  "$FD_COMMAND" --type file \
    --exec cp {} "{}.$COMMAND_NAME.backup" \; \
    --exec sd "${ARGS[SEARCH]}" "${ARGS[REPLACE]}"
else
  "$FD_COMMAND" --type file --exec sd "${ARGS[SEARCH]}" "${ARGS[REPLACE]}"
fi
