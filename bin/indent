#!/usr/bin/env bash

# MIT License
#
# Copyright (c) 2023 John Karahalis
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Use "strict mode."
#
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail

COMMAND_NAME=$(basename "$0")

eval "$(docopts --help=- -A ARGS : "$@" <<EOF
Indent input with spaces.

Usage:
  $COMMAND_NAME [--size SIZE] [FILE]
  $COMMAND_NAME -h | --help

Examples:
  $COMMAND_NAME .bashrc
  cal | $COMMAND_NAME

Options:
  -s SIZE, --size SIZE
      The number of spaces to indent input with [default: 4]
  -h, --help
      Show this documentation

This command may appear to strip color from input, but it doesn't. Rather, many
programs disable color output when output is sent to a piped program. This can
be confirmed by indenting text from a command that is forced to use color, as in
the following example:

  grep --color=always source "\$HOME/.bashrc" | $COMMAND_NAME
EOF
)"

if (( ${ARGS[--size]} < 0 )); then
  >&2 echo 'Error: Indent size must be non-negative.'
  exit 1
fi

SPACES=''
for (( I=1; I <= ${ARGS[--size]}; I++ )); do
  SPACES+=' '
done

FILE_OR_STDIN=${ARGS[FILE]:-/dev/stdin}

# https://unix.stackexchange.com/a/148111
sed "s/^/$SPACES/" "$FILE_OR_STDIN"
